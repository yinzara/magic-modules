# Copyright 2018 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: Firebase
display_name: Firebase
versions:
  - !ruby/object:Api::Product::Version
    name: beta
    base_url: https://firebase.googleapis.com/v1beta1/
scopes:
  - https://www.googleapis.com/auth/cloud-platform
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
    resource_inside_response: true
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
objects:
  - !ruby/object:Api::Resource
    name: 'Project'
    min_version: beta
    base_url: projects/{{project}}
    create_url: projects/{{project}}:addFirebase
    input: true
    description: |
      A Google Cloud Firebase instance. This enables Firebase resources on a given google project.
      Since a FirebaseProject is actually also a GCP Project, a FirebaseProject uses underlying GCP
      identifiers (most importantly, the projectId) as its own for easy interop with GCP APIs.

      Once Firebase has been added to a Google Project it cannot be removed.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://firebase.google.com/'
      api: 'https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects'
    properties:
      - !ruby/object:Api::Type::String
        name: projectNumber
        output: true
        description: |
          The number of the google project that firebase is enabled on.
      - !ruby/object:Api::Type::String
        name: displayName
        output: true
        description: |
          The GCP project display name
      - !ruby/object:Api::Type::NestedObject
        name: resources
        description: |
          The default Firebase resources associated with the Project.
        output: true
        properties:
          - !ruby/object:Api::Type::String
            name: hostingSite
            output: true
            description: |
              The default Firebase Hosting site name, in the format:

              projectId.

              Though rare, your projectId might already be used as the name for an existing Hosting site in another
              project (learn more about creating non-default, additional sites). In these cases, your projectId is
              appended with a hyphen then five alphanumeric characters to create your default Hosting site name.

              For example, if your projectId is myproject123, your default Hosting site name might be:

              myproject123-a5c16'
          - !ruby/object:Api::Type::String
            name: realtimeDatabaseInstance
            output: true
            description: |
              The default Firebase Realtime Database instance name, in the format:

              projectId.

              Though rare, your projectId might already be used as the name for an existing Realtime Database instance
              in another project (learn more about database sharding). In these cases, your projectId is appended with
              a hyphen then five alphanumeric characters to create your default Realtime Database instance name.

              For example, if your projectId is myproject123, your default database instance name might be:

              myproject123-a5c16'
          - !ruby/object:Api::Type::String
            name: storageBucket
            output: true
            description: |
              The default Cloud Storage for Firebase storage bucket, in the format:

              projectId.appspot.com'
          - !ruby/object:Api::Type::String
            name: locationId
            output: true
            description: |
              The ID of the project's default GCP resource location. The location is one of the available GCP resource
              locations. This field is omitted if the default GCP resource location has not been finalized yet. To set
              your project's default GCP resource location, call defaultLocation.finalize after you add Firebase
              services to your project."
